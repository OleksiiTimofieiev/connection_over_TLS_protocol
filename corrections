~ Major issues:

+ Параметр addr пытается выступить в виде "ip":<port> а не <ip>:<port>.   
Т.е. при вводе 127.0.0.1:9999 возвращается ошибка. Соответственно протестировать на 2х и более отдельных устройствах невозможно.
==> внесены изменения в [ files / lines: ./srcs/client/client.c -> 138 ]

+ Нет контроля использования памяти. При появлении ошибок malloc - происходит просто аварийный выход из программы. 
Надо: контролировать размер списка и при достижении предела - сбрасывать его в файл и очищать.
==>  внесены изменения в [files / lines: ./srcs/server/linked_list_functions.c -> 10 - 12 ]

- При отсутствии свободных потоков в пуле, возращается ошибка и происходит выход из программы. 
Как минимум, необходимо просто игнорировать пакет, в идеале - создать буферную очередь между сетевой частью и обработкой пакетов.

+ Кроме строки "error" в файл передается еще около 256 бинарных данных из сегмента кода (похожая проблема была на собеседовании). 
А именно: "check_sha1_sum(&decrypted_full_packet[256], checksum) - в результате неверной передачи параметра decrypted_full_packet в результате происходит выход за пределы массива с чтением данных 
из .rodata сегмента и UDP_INPUT выглядит вот так: error^@No available thread.^@thread creation error^@^@^AESC^C;|^@^@^@^N^@^@^@^X"
==> внес изменения в [files / lines: ./srcs/server/linked_list_functions.c -> 16 ]

+ При сборке по-умолчанию, без каких-либо изменений - сценарий не работает. Пакет не проходит валидацию хеш-суммы.
==> добавил директорию mbedtls к проекту (headers + *.a); 

~ Minor issues:

+ Разбор параметров командной строки в Linux лучше производить с помощью getopt().
==> внес изменения в [ files / lines: ./srcs/server/server.c -> 19 ]
==> вынес функцию парсинга в [ files / lines: ./srcs/server/parsing_with_get_opt_server.c -> 19 ]
==> соответственно, надеюсь, Вы не будете против, изменил форматт ввода на: ./server_app -p 9999 -t 20 

==> внес изменения в [ files / lines: ./srcs/client/client.c -> 29 ]
==> вынес функцию парсинга в [ files / lines: ./srcs/client/initialization_module.c ]
==> соответственно, надеюсь, Вы не будете против, изменил форматт ввода на: ./client_app -u 12345678 -d 1 -i 127.0.0.1 -p 9999


+ Проверка результатов возврата ф-й для работы с сокетами должны кроме сообщения об ошибке типа "socket creation failed" возвращать системную ошибку - 
if ((sockfd = socket(AF_INET, SOCK_DGRAM, 0)) < 0) \{ perror("socket creation failed "); exit(EXIT_FAILURE); }
причину по которой возникла ошибка из переменной errorno. 
==> внесены изменения в [files / lines: ./srcs/client/client.c -> 128 && ./srcs/server/server.c -> 52, 68]

+ Любые разделяемые данные передаваемые в поток(и) должны быть защищены примитивами синхронизации - thread_create(thread_pool, buffer, number_of_threads);
==> добавил отдельный мьютекс для данной цели и поставил точки синхронизации [ files / lines: ./srcs/server/server.c -> 6, 87, 91 ]

+ Выходной файл лучше все же сохранять в ASCII виде.
==> внесены изменения в [files / lines: ./srcs/server/print_to_file_routine.c -> 21 - 24 ]

- RSA параметры удобнее хранить в pem формате.
==> Вы имеете ввиду private / public key ? 

+ Относительные пути "#include "../../includes/client/client.h". Должно быть: "client/client.h" либо "client.h""
==> внесены изменения в Makefile и в исходные файлы;

+ Смешивание табуляции и пробелов в отступах.
==> внесены изменения в соответствующие файлы;
